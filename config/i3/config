# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8
font pango:Terminus 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Gaps tuning
for_window [class=".*"] border pixel 0
default_border pixel 0
smart_gaps on
gaps inner 10

default_floating_border pixel 1
for_window [class=".*"] title_format "<span size='large'>%title</span> <span font_desc='Gohu GohuFont' foreground='#FFFFFF'>%class</span>"

# Colors
client.focused          #EE7313 #EE7313 #FFFFFF #EE7313 #000000
client.focused_inactive #112526 #112526 #AE9793 #EE7313 #000000
client.unfocused        #112526 #112526 #AE9793 #EE7313 #000000

mouse_warping none
focus_on_window_activation urgent

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend.
#exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
#exec --no-startup-id nm-applet

# XDG autostart
exec --no-startup-id dex -a -e i3

# Start dunst notification daemon
#exec_always --no-startup-id killall -q dunst && dunst

# Use pactl to adjust volume in PulseAudio.
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

bindsym XF86MonBrightnessUp exec --no-startup-id brightnessctl s 20+
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl s 20-

bindsym Print exec gnome-screenshot -i
bindsym Ctrl+Print exec --no-startup-id gnome-screenshot -c
bindsym Shift+Print exec --no-startup-id gnome-screenshot -ca
bindsym Mod1+Print exec --no-startup-id gnome-screenshot -cw

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+k exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+w kill

# start dmenu (a program launcher)
#bindsym $mod+r exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

bindsym $mod+space exec --no-startup-id "rofi -modi combi,calc -combi-modi drun,run,calc -show combi -theme orange-applauncher -location 2 -show-icons -icon-theme 'Flat-Remix-Yellow-Dark' -font 'Source Code Pro 9'"
bindsym $mod+p exec --no-startup-id "bwmenu --auto-lock 300 -- -theme orange-applauncher -location 2 -font 'Source Code Pro 9'"
bindsym $mod+Shift+v exec --no-startup-id $HOME/.config/i3/roficlip.sh
# copied from polybar config
bindsym $mod+Shift+n exec --no-startup-id "networkmanager_dmenu -fn 'Gohu GohuFont:size=8' -nb '#112526' -nf '#ae9793' -sb '#ee7313' -l 20 -i"
bindsym $mod+Shift+t exec --no-startup-id $HOME/bin/watson_dmenu

# change focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

bindsym $mod+backslash focus left
bindsym $mod+y focus down
bindsym $mod+x focus up
bindsym $mod+c focus right

# move focused window
bindsym $mod+Ctrl+Left move left
bindsym $mod+Ctrl+Down move down
bindsym $mod+Ctrl+Up move up
bindsym $mod+Ctrl+Right move right

# move workspace between outputs
bindsym $mod+Ctrl+Prior move workspace to output up
bindsym $mod+Ctrl+Next move workspace to output down

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+q layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+Return floating toggle

# change focus between tiling / floating windows
bindsym $mod+Return focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# bind to monitors
set $primary "eDP"
set $secondary "DisplayPort-2"
workspace $ws1 output $secondary
workspace $ws2 output $secondary
workspace $ws3 output $secondary
workspace $ws4 output $secondary
workspace $ws5 output $secondary
workspace $ws6 output $primary
workspace $ws7 output $primary
workspace $ws8 output $primary
workspace $ws9 output $primary
workspace $ws10 output $primary

# switch to workspace
bindsym $mod+plus workspace $ws1
bindsym $mod+ecaron workspace $ws2
bindsym $mod+scaron workspace $ws3
bindsym $mod+ccaron workspace $ws4
bindsym $mod+rcaron workspace $ws5
bindsym $mod+zcaron workspace $ws6
bindsym $mod+yacute workspace $ws7
bindsym $mod+aacute workspace $ws8
bindsym $mod+iacute workspace $ws9
bindsym $mod+eacute workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+ecaron move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+scaron move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+ccaron move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+rcaron move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+zcaron move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+yacute move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+aacute move container to workspace $ws8; workspace $ws8
bindsym $mod+Shift+iacute move container to workspace $ws9; workspace $ws9
bindsym $mod+Shift+eacute move container to workspace $ws10; workspace $ws10

bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

bindsym $mod+l exec cinnamon-screensaver-command -l

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
#        bindsym j resize shrink width 10 px or 10 ppt
#        bindsym k resize grow height 10 px or 10 ppt
#        bindsym l resize shrink height 10 px or 10 ppt
#        bindsym uring resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#	position bottom
#        status_command i3status
#}

# Assignments

assign [class="^(Proton|Slack)$"] 1
assign [class="^Alacritty$"] 2
assign [class="^Code$"] 3
assign [class="Remmina|^obsidian$"] 4
assign [class="^Code$" title="(VPS Web|vpsweb-ansible)"] 5
assign [class="^(Google-chrome|Orchideio)$"] 6
assign [class="^Alacritty$" title="Orchideio"] 7
assign [class="^Bitwarden$"] 8
assign [class="^(TelegramDesktop|discord)$"] 10

exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# Autostart apps
exec --no-startup-id $HOME/.config/i3/autostart.sh

